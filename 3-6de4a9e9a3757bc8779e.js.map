{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/react-spring/renderprops.js","webpack:///./node_modules/fbemitter/lib/EmitterSubscription.js","webpack:///./node_modules/fbjs/lib/invariant.js","webpack:///./node_modules/fbemitter/index.js","webpack:///./node_modules/fbemitter/lib/BaseEventEmitter.js","webpack:///./node_modules/fbemitter/lib/EventSubscription.js","webpack:///./node_modules/fbemitter/lib/EventSubscriptionVendor.js","webpack:///./node_modules/fbjs/lib/emptyFunction.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","__webpack_require__","d","__webpack_exports__","renderprops_Transition","bugfixes","undefined","applyAnimatedValues","colorNames","requestFrame","cb","window","requestAnimationFrame","interpolation","now","Date","defaultElement","createAnimatedStyle","injectApplyAnimatedValues","fn","transform","injectColorNames","names","injectBugfixes","injectInterpolation","cls","injectDefaultElement","el","injectCreateAnimatedStyle","factory","Animated","[object Object]","getValue","child","getValues","object","map","k","AnimatedWithChildren","_this","super","children","getChildren","getPayload","index","payload","attach","push","splice","detach","AnimatedArrayWithChildren","getAnimatedValue","forEach","p","addChild","removeChild","AnimatedObjectWithChildren","s","animated","value","AnimatedStyle","style","colors","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Interpolation","config","output","extra","Array","isArray","create","range","extrapolate","outputRange","inputRange","easing","t","extrapolateLeft","extrapolateRight","input","findRange","inputMin","inputMax","outputMin","outputMax","result","Infinity","interpolate","NUMBER","PERCENTAGE","slice","join","rgb","RegExp","rgba","hsl","hsla","hex3","hex4","hex6","hex8","hue2rgb","q","hslToRgb","h","l","r","g","b","Math","round","parse255","str","int","parseInt","parse360","parseFloat","parse1","num","parsePercentage","colorToRgba","int32Color","color","match","exec","normalizeColor","stringShapeRegex","colorRegex","colorNamesRegex","AnimatedInterpolation","parents","_config","_arg","calc","updateConfig","arg","AnimatedValue","_value","setValue","flush","updateStyles","findAnimatedStyles","node","styles","update","add","animatedStyles","updateValue","Set","done","startPosition","lastPosition","lastVelocity","lastTime","controller","size","animatedStyle","isActive","clear","AnimatedArray","array","v","n","withDefault","defaultValue","toArray","a","shallowEqual","callProp","obj","_len","args","_key","getValues$1","renderprops_interpolateTo","props","forward","to","from","native","onStart","onRest","onFrame","reset","reverse","force","immediate","impl","inject","delay","destroyed","interpolateTo","autoStart","ref","getForwardProps","rest","reduce","convertToAnimatedValue","acc","_ref","name","convertValues","allProps","entries","handleRef","current","check","overwrite","width","height","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","dangerousStyleValue","isCustomProperty","trim","prop","prefix","charAt","toUpperCase","substring","prefixKey","attributeCache","rangeValue","replace","outputRanges","number","interpolations","_","p1","p2","p3","p4","callback","some","element","type","elementStyles","react_default","createElement","position","visibility","_ref2","react_dom_default","findDOMNode","cs","getComputedStyle","boxSizing","offsetWidth","offsetHeight","paddingX","paddingLeft","paddingRight","paddingY","paddingTop","paddingBottom","borderX","borderLeftWidth","borderRightWidth","borderY","borderTopWidth","borderBottomWidth","convert","instance","nodeType","setAttribute","scrollTop","scrollLeft","attributes","textContent","styleName","styleValue","setProperty","dashCase","toLowerCase","getAttribute","active","controllers","frameLoop","time","isDone","noChange","configIdx","configs","endOfAnimation","valIdx","animatedValues","animation","fromValues","toValues","isAnimated","velocity","initialVelocity","decay","startTime","duration","exp","abs","numSteps","floor","tension","friction","mass","isOvershooting","clamp","isVelocity","precision","isDisplacement","animatedProps","onUpdate","delete","debouncedOnEnd","finished","addController","has","removeController","renderprops_Controller","dependents","hasChanged","merged","animations","frame","_ref$from","_ref$to","_ref$config","_ref$delay","_ref3","entry","isNumber","isString","startsWith","test","fromValue","toValue","toConfig","parent","changes","interpolation$$1","prev","prepare","start","onEnd","stop","Promise","res","resolve","renderprops_AnimatedProps","createAnimatedComponent","Component","AnimatedComponent","propsAnimated","forceUpdate","attachProps","forwardRef","nextProps","oldPropsAnimated","_this$props","currentStyle","_this$propsAnimated$g","renderprops_Spring","state","lastProps","propsChanged","internal","didUpdate","didInject","wasMounted","mounted","finish","setState","afterInject","after","componentDidUpdate","injectProps","values","defaultProps","renderprops_Trail","PureComponent","first","instances","hook","items","_children","_this$props$from","initial","item","prevProps","renderprops_KeyframesImpl","guid","last","next","running","previous","_this2","states","f","filter","localId","slots","slot","then","_this$state","_this$props2","primitive","_onRest","Keyframes","__default","Spring","Trail","get","String","destroyItem","onDestroyed","deleted","transitions","_get","enter","leave","_get$trail","trail","unique","_get2","_keys","_items","currentKeys","currentSet","nextSet","added","removed","originalKey","updated","find","keyIndex","left","max","right","min","out","pos","transition","findIndex","_ref4","EmitterSubscription","_EventSubscription","subscriber","listener","context","Constructor","TypeError","_classCallCheck","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","module","exports","validateFormat","format","condition","c","e","error","Error","argIndex","framesToPop","fbemitter","EventEmitter","EventSubscriptionVendor","emptyFunction","invariant","BaseEventEmitter","_subscriber","_currentSubscription","addListener","eventType","addSubscription","once","emitter","removeCurrentListener","removeAllListeners","removeAllSubscriptions","removeSubscription","listeners","subscriptions","getSubscriptionsForType","thatReturnsTrue","subscription","emit","ii","__emitToSubscription","concat","EventSubscription","remove","_subscriptionsForType","subscriptionsForType","makeEmptyFunction","thatReturns","thatReturnsFalse","thatReturnsNull","thatReturnsThis","thatReturnsArgument","eve","mina","requestID","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTime","toString","idgen","idprefix","timer","sta","val","ds","dur","B","speed","spd","stopit","id","pause","pdif","resume","j","jj","end","set","timeStamp","len","A","anim","linear","status","getById","easeout","pow","easein","easeinout","Q","sqrt","x","y","backin","backout","elastic","sin","PI","bounce","Snap","root","w","wrap","is","Element","glob","doc","querySelector","Paper","version","win","document","tokenRegex","objNotationRegex","Str","toFloat","toInt","math","mmax","mmin","E","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","attr","createTextNode","text","createComment","getAttributeNS","nodeValue","setAttributeNS","removeAttribute","createElementNS","o","isFinite","cacher","scope","postprocessor","newf","cache","count","repush","shift","rad","deg","all","quote","quotedName","isFunc","replacer","clone","angle","cos","asin","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","path","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","pathSegList","numberOfItems","bestDistance","scanLength","getPointAtLength","before","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","tolerance","rem","getRGB","colour","hex","rgbtoString","toHex","split","hsb2rgb","hsl2rgb","hsb","toFixed","getElementsByTagName","defaultView","getPropertyValue","hsbtoString","hsltoString","prepareRGB","string","clr","packageRGB","rgb2hsl","rgb2hsb","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","u","z","data","params","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","_unit2px","svg","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","contains","compareDocumentPosition","ownerSVGElement","select","add2group","list","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","desc","defs","proto","ownerDocument","body","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","overflow","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","top","pageYOffset","pageXOffset","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","insertBefore","prependTo","nextSibling","insertAfter","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","viewBox","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","fontSize","getFontSize","tokens","stops","seed","step","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","getter","setter","textExtract","chi","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","getUnit","rect","circle","preload","onerror","src","img","cssText","onload","image","preserveAspectRatio","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","bindings","setproto","thisArg","animate","Animation","each","begin","handler","callbacker","bind","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","getViewBox","getColour","Function","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","A100","A200","A400","A700","mui","flat","deeppurple","amber","deeporange","bluegrey","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","wetasphalt","concrete","asbestos","importMUIColors","__WEBPACK_AMD_DEFINE_RESULT__","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","indexed","queue","ce","sort","_events","nes","es","sep","exist","event","subname","cur","nts","inodes","funcs","prune"],"mappings":"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","file":"3-6de4a9e9a3757bc8779e.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nlet bugfixes = undefined;\nlet applyAnimatedValues = undefined;\nlet colorNames = [];\nlet requestFrame = cb => typeof window !== 'undefined' && window.requestAnimationFrame(cb);\nlet cancelFrame = cb => typeof window !== 'undefined' && window.cancelAnimationFrame(cb);\nlet interpolation = undefined;\nlet now = () => Date.now();\nlet defaultElement = undefined;\nlet createAnimatedStyle = undefined;\nconst injectApplyAnimatedValues = (fn, transform) => applyAnimatedValues = {\n  fn,\n  transform\n};\nconst injectColorNames = names => colorNames = names;\nconst injectBugfixes = fn => bugfixes = fn;\nconst injectInterpolation = cls => interpolation = cls;\nconst injectFrame = (raf, caf) => {\n  var _ref = [raf, caf];\n  requestFrame = _ref[0];\n  cancelFrame = _ref[1];\n  return _ref;\n};\nconst injectNow = nowFn => now = nowFn;\nconst injectDefaultElement = el => defaultElement = el;\nconst injectCreateAnimatedStyle = factory => createAnimatedStyle = factory;\n\nvar Globals = /*#__PURE__*/Object.freeze({\n  get bugfixes () { return bugfixes; },\n  get applyAnimatedValues () { return applyAnimatedValues; },\n  get colorNames () { return colorNames; },\n  get requestFrame () { return requestFrame; },\n  get cancelFrame () { return cancelFrame; },\n  get interpolation () { return interpolation; },\n  get now () { return now; },\n  get defaultElement () { return defaultElement; },\n  get createAnimatedStyle () { return createAnimatedStyle; },\n  injectApplyAnimatedValues: injectApplyAnimatedValues,\n  injectColorNames: injectColorNames,\n  injectBugfixes: injectBugfixes,\n  injectInterpolation: injectInterpolation,\n  injectFrame: injectFrame,\n  injectNow: injectNow,\n  injectDefaultElement: injectDefaultElement,\n  injectCreateAnimatedStyle: injectCreateAnimatedStyle\n});\n\nclass Animated {\n  attach() {}\n\n  detach() {}\n\n  getValue() {}\n\n  getAnimatedValue() {\n    return this.getValue();\n  }\n\n  addChild(child) {}\n\n  removeChild(child) {}\n\n  getChildren() {\n    return [];\n  }\n\n}\n\nconst getValues = object => Object.keys(object).map(k => object[k]);\n\nclass AnimatedWithChildren extends Animated {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.children = [];\n\n    this.getChildren = () => this.children;\n\n    this.getPayload = function (index) {\n      if (index === void 0) {\n        index = undefined;\n      }\n\n      return index !== void 0 && _this.payload ? _this.payload[index] : _this.payload || _this;\n    };\n  }\n\n  addChild(child) {\n    if (this.children.length === 0) this.attach();\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n    this.children.splice(index, 1);\n    if (this.children.length === 0) this.detach();\n  }\n\n}\nclass AnimatedArrayWithChildren extends AnimatedWithChildren {\n  constructor() {\n    super(...arguments);\n    this.payload = [];\n\n    this.getAnimatedValue = () => this.getValue();\n\n    this.attach = () => this.payload.forEach(p => p instanceof Animated && p.addChild(this));\n\n    this.detach = () => this.payload.forEach(p => p instanceof Animated && p.removeChild(this));\n  }\n\n}\nclass AnimatedObjectWithChildren extends AnimatedWithChildren {\n  constructor() {\n    super(...arguments);\n    this.payload = {};\n\n    this.getAnimatedValue = () => this.getValue(true);\n\n    this.attach = () => getValues(this.payload).forEach(s => s instanceof Animated && s.addChild(this));\n\n    this.detach = () => getValues(this.payload).forEach(s => s instanceof Animated && s.removeChild(this));\n  }\n\n  getValue(animated) {\n    if (animated === void 0) {\n      animated = false;\n    }\n\n    const payload = {};\n\n    for (const key in this.payload) {\n      const value = this.payload[key];\n      if (animated && !(value instanceof Animated)) continue;\n      payload[key] = value instanceof Animated ? value[animated ? 'getAnimatedValue' : 'getValue']() : value;\n    }\n\n    return payload;\n  }\n\n}\n\nclass AnimatedStyle extends AnimatedObjectWithChildren {\n  constructor(style) {\n    super();\n    style = style || {};\n    if (style.transform && !(style.transform instanceof Animated)) style = applyAnimatedValues.transform(style);\n    this.payload = style;\n  }\n\n}\n\n// http://www.w3.org/TR/css3-color/#svg-color\nconst colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n};\n\nclass Interpolation {\n  // Default config = config, args\n  // Short config   = range, output, extrapolate\n  static create(config, output, extra) {\n    if (typeof config === 'function') return config;else if (interpolation && config.output && typeof config.output[0] === 'string') return interpolation(config);else if (Array.isArray(config)) return Interpolation.create({\n      range: config,\n      output,\n      extrapolate: extra || 'extend'\n    });\n    let outputRange = config.output;\n    let inputRange = config.range || [0, 1];\n\n    let easing = config.easing || (t => t);\n\n    let extrapolateLeft = 'extend';\n    let map = config.map;\n    if (config.extrapolateLeft !== undefined) extrapolateLeft = config.extrapolateLeft;else if (config.extrapolate !== undefined) extrapolateLeft = config.extrapolate;\n    let extrapolateRight = 'extend';\n    if (config.extrapolateRight !== undefined) extrapolateRight = config.extrapolateRight;else if (config.extrapolate !== undefined) extrapolateRight = config.extrapolate;\n    return input => {\n      let range = findRange(input, inputRange);\n      return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, map);\n    };\n  }\n\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  let result = map ? map(input) : input; // Extrapolate\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax; // Input Range\n\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin); // Easing\n\n  result = easing(result); // Output Range\n\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\n\n  return i - 1;\n}\n\n// const INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call() {\n  return '\\\\(\\\\s*(' + Array.prototype.slice.call(arguments).join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\nconst rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\nconst hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\nconst hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\n\n/*\nhttps://github.com/react-community/normalize-css-color\n\nBSD 3-Clause License\n\nCopyright (c) 2016, React Community\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nfunction normalizeColor(color) {\n  let match;\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;\n  } // Ordered based on occurrences on Facebook codebase\n\n\n  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;\n  if (colors.hasOwnProperty(color)) return colors[color];\n\n  if (match = rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    0x000000ff) >>> // a\n    0;\n  }\n\n  if (match = rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    parse1(match[4])) >>> // a\n    0;\n  }\n\n  if (match = hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    'ff', // a\n    16) >>> 0;\n  } // https://drafts.csswg.org/css-color-4/#hex-notation\n\n\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\n\n  if (match = hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    match[4] + match[4], // a\n    16) >>> 0;\n  }\n\n  if (match = hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | 0x000000ff) >>> // a\n    0;\n  }\n\n  if (match = hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | parse1(match[4])) >>> // a\n    0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) return 0;\n  if (int > 255) return 255;\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) return 0;\n  if (num > 1) return 255;\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str);\n  if (int < 0) return 0;\n  if (int > 100) return 1;\n  return int / 100;\n}\n\nfunction colorToRgba(input) {\n  let int32Color = normalizeColor(input);\n  if (int32Color === null) return input;\n  int32Color = int32Color || 0;\n  let r = (int32Color & 0xff000000) >>> 24;\n  let g = (int32Color & 0x00ff0000) >>> 16;\n  let b = (int32Color & 0x0000ff00) >>> 8;\n  let a = (int32Color & 0x000000ff) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n} // Problem: https://github.com/animatedjs/animated/pull/102\n// Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662\n\n\nconst stringShapeRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g; // Covers rgb, rgba, hsl, hsla\n// Taken from https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi; // Covers color names (transparent, blue, etc.)\n\nconst colorNamesRegex = new RegExp(`(${Object.keys(colors).join('|')})`, 'g');\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36)           // colors\n *   -45deg                            // values with units\n *   0 2px 2px 0px rgba(0, 0, 0, 0.12) // box shadows\n */\n\nfunction createInterpolation(config) {\n  // Replace colors with rgba\n  const outputRange = config.output.map(rangeValue => rangeValue.replace(colorRegex, colorToRgba)).map(rangeValue => rangeValue.replace(colorNamesRegex, colorToRgba)); // ->\n  // [\n  //   [0, 50],\n  //   [100, 150],\n  //   [200, 250],\n  //   [0, 0.5],\n  // ]\n\n  const outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);\n  outputRange.forEach(value => {\n    value.match(stringShapeRegex).forEach((number, i) => outputRanges[i].push(+number));\n  });\n  const interpolations = outputRange[0].match(stringShapeRegex).map((value, i) => {\n    return Interpolation.create(_extends({}, config, {\n      output: outputRanges[i]\n    }));\n  });\n  return input => {\n    let i = 0;\n    return outputRange[0] // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n    .replace(stringShapeRegex, () => interpolations[i++](input)) // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n    // round the opacity (4th column).\n    .replace(/rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi, (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`);\n  };\n}\n\nclass AnimatedInterpolation extends AnimatedArrayWithChildren {\n  constructor(parents, _config, _arg) {\n    super();\n\n    this.getValue = () => this.calc(...this.payload.map(value => value.getValue()));\n\n    this.updateConfig = (config, arg) => this.calc = Interpolation.create(config, arg);\n\n    this.interpolate = (config, arg) => new AnimatedInterpolation(this, config, arg);\n\n    this.payload = // AnimatedArrays should unfold, except AnimatedInterpolation which is taken as is\n    parents instanceof AnimatedArrayWithChildren && !parents.updateConfig ? parents.payload : Array.isArray(parents) ? parents : [parents];\n    this.calc = Interpolation.create(_config, _arg);\n  }\n\n}\nconst interpolate$1 = (parents, config, arg) => parents && new AnimatedInterpolation(parents, config, arg);\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\n\nfunction findAnimatedStyles(node, styles) {\n  if (typeof node.update === 'function') styles.add(node);else node.getChildren().forEach(child => findAnimatedStyles(child, styles));\n}\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n */\n\n\nclass AnimatedValue extends AnimatedWithChildren {\n  constructor(_value) {\n    var _this;\n\n    super();\n    _this = this;\n\n    this.setValue = function (value, flush) {\n      if (flush === void 0) {\n        flush = true;\n      }\n\n      _this.value = value;\n      if (flush) _this.flush();\n    };\n\n    this.getValue = () => this.value;\n\n    this.updateStyles = () => findAnimatedStyles(this, this.animatedStyles);\n\n    this.updateValue = value => this.flush(this.value = value);\n\n    this.interpolate = (config, arg) => new AnimatedInterpolation(this, config, arg);\n\n    this.value = _value;\n    this.animatedStyles = new Set();\n    this.done = false;\n    this.startPosition = _value;\n    this.lastPosition = _value;\n    this.lastVelocity = undefined;\n    this.lastTime = undefined;\n    this.controller = undefined;\n  }\n\n  flush() {\n    if (this.animatedStyles.size === 0) this.updateStyles();\n    this.animatedStyles.forEach(animatedStyle => animatedStyle.update());\n  }\n\n  prepare(controller) {\n    // Values stay loyal to their original controller, this is also a way to\n    // detect trailing values originating from a foreign controller\n    if (this.controller === undefined) this.controller = controller;\n\n    if (this.controller === controller) {\n      this.startPosition = this.value;\n      this.lastPosition = this.value;\n      this.lastVelocity = controller.isActive ? this.lastVelocity : undefined;\n      this.lastTime = controller.isActive ? this.lastTime : undefined;\n      this.done = false;\n      this.animatedStyles.clear();\n    }\n  }\n\n}\n\nclass AnimatedArray extends AnimatedArrayWithChildren {\n  constructor(array) {\n    var _this;\n\n    super();\n    _this = this;\n\n    this.setValue = function (value, flush) {\n      if (flush === void 0) {\n        flush = true;\n      }\n\n      if (Array.isArray(value)) {\n        if (value.length === _this.payload.length) value.forEach((v, i) => _this.payload[i].setValue(v, flush));\n      } else _this.payload.forEach((v, i) => _this.payload[i].setValue(value, flush));\n    };\n\n    this.getValue = () => this.payload.map(v => v.getValue());\n\n    this.interpolate = (config, arg) => new AnimatedInterpolation(this, config, arg);\n\n    this.payload = array.map(n => new AnimatedValue(n));\n  }\n\n}\n\nfunction withDefault(value, defaultValue) {\n  return value === undefined || value === null ? defaultValue : value;\n}\nfunction toArray(a) {\n  return a !== void 0 ? Array.isArray(a) ? a : [a] : [];\n}\nfunction shallowEqual(a, b) {\n  if (typeof a !== typeof b) return false;\n  if (typeof a === 'string' || typeof a === 'number') return a === b;\n  let i;\n\n  for (i in a) if (!(i in b)) return false;\n\n  for (i in b) if (a[i] !== b[i]) return false;\n\n  return i === void 0 ? a === b : true;\n}\nfunction callProp(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return typeof obj === 'function' ? obj(...args) : obj;\n}\nfunction getValues$1(object) {\n  return Object.keys(object).map(k => object[k]);\n}\nfunction getForwardProps(props) {\n  const to = props.to,\n        from = props.from,\n        config = props.config,\n        native = props.native,\n        onStart = props.onStart,\n        onRest = props.onRest,\n        onFrame = props.onFrame,\n        children = props.children,\n        reset = props.reset,\n        reverse = props.reverse,\n        force = props.force,\n        immediate = props.immediate,\n        impl = props.impl,\n        inject = props.inject,\n        delay = props.delay,\n        attach = props.attach,\n        destroyed = props.destroyed,\n        interpolateTo = props.interpolateTo,\n        autoStart = props.autoStart,\n        ref = props.ref,\n        forward = _objectWithoutPropertiesLoose(props, [\"to\", \"from\", \"config\", \"native\", \"onStart\", \"onRest\", \"onFrame\", \"children\", \"reset\", \"reverse\", \"force\", \"immediate\", \"impl\", \"inject\", \"delay\", \"attach\", \"destroyed\", \"interpolateTo\", \"autoStart\", \"ref\"]);\n\n  return forward;\n}\nfunction interpolateTo(props) {\n  const forward = getForwardProps(props);\n  const rest = Object.keys(props).reduce((a, k) => forward[k] !== void 0 ? a : _extends({}, a, {\n    [k]: props[k]\n  }), {});\n  return _extends({\n    to: forward\n  }, rest);\n}\nfunction convertToAnimatedValue(acc, _ref) {\n  let name = _ref[0],\n      value = _ref[1];\n  return _extends({}, acc, {\n    [name]: new (Array.isArray(value) ? AnimatedArray : AnimatedValue)(value)\n  });\n}\nfunction convertValues(props) {\n  const from = props.from,\n        to = props.to,\n        native = props.native;\n  const allProps = Object.entries(_extends({}, from, to));\n  return native ? allProps.reduce(convertToAnimatedValue, {}) : _extends({}, from, to);\n}\nfunction handleRef(ref, forward) {\n  if (forward) {\n    // If it's a function, assume it's a ref callback\n    if (typeof forward === 'function') forward(ref);else if (typeof forward === 'object') {\n      // If it's an object and has a 'current' property, assume it's a ref object\n      forward.current = ref;\n    }\n  }\n\n  return ref;\n}\n\nconst check = value => value === 'auto';\n\nconst overwrite = (width, height) => (acc, _ref) => {\n  let name = _ref[0],\n      value = _ref[1];\n  return _extends({}, acc, {\n    [name]: value === 'auto' ? ~name.indexOf('height') ? height : width : value\n  });\n};\n\nfunction fixAuto(props, callback) {\n  const from = props.from,\n        to = props.to,\n        children = props.children; // Dry-route props back if nothing's using 'auto' in there\n  // TODO: deal with \"null\"\n\n  if (!(getValues$1(to).some(check) || getValues$1(from).some(check))) return; // Fetch render v-dom\n\n  let element = children(convertValues(props)); // A spring can return undefined/null, check against that (#153)\n\n  if (!element) return; // Or it could be an array (#346) ...\n\n  if (Array.isArray(element)) element = {\n    type: 'div',\n    props: {\n      children: element\n    } // Extract styles\n\n  };\n  const elementStyles = element.props.style; // Return v.dom with injected ref\n\n  return React.createElement(element.type, _extends({\n    key: element.key ? element.key : undefined\n  }, element.props, {\n    style: _extends({}, elementStyles, {\n      position: 'absolute',\n      visibility: 'hidden'\n    }),\n    ref: _ref2 => {\n      if (_ref2) {\n        // Once it's rendered out, fetch bounds (minus padding/margin/borders)\n        let node = ReactDOM.findDOMNode(_ref2);\n        let width, height;\n        let cs = getComputedStyle(node);\n\n        if (cs.boxSizing === 'border-box') {\n          width = node.offsetWidth;\n          height = node.offsetHeight;\n        } else {\n          const paddingX = parseFloat(cs.paddingLeft || 0) + parseFloat(cs.paddingRight || 0);\n          const paddingY = parseFloat(cs.paddingTop || 0) + parseFloat(cs.paddingBottom || 0);\n          const borderX = parseFloat(cs.borderLeftWidth || 0) + parseFloat(cs.borderRightWidth || 0);\n          const borderY = parseFloat(cs.borderTopWidth || 0) + parseFloat(cs.borderBottomWidth || 0);\n          width = node.offsetWidth - paddingX - borderX;\n          height = node.offsetHeight - paddingY - borderY;\n        }\n\n        const convert = overwrite(width, height);\n        callback(_extends({}, props, {\n          from: Object.entries(from).reduce(convert, from),\n          to: Object.entries(to).reduce(convert, to)\n        }));\n      }\n    }\n  }));\n}\n\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\ninjectCreateAnimatedStyle(style => new AnimatedStyle(style));\ninjectDefaultElement('div');\ninjectInterpolation(createInterpolation);\ninjectColorNames(colors);\ninjectBugfixes(fixAuto);\ninjectApplyAnimatedValues((instance, props) => {\n  if (instance.nodeType && instance.setAttribute !== undefined) {\n    const style = props.style,\n          children = props.children,\n          scrollTop = props.scrollTop,\n          scrollLeft = props.scrollLeft,\n          attributes = _objectWithoutPropertiesLoose(props, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n    if (scrollTop !== void 0) instance.scrollTop = scrollTop;\n    if (scrollLeft !== void 0) instance.scrollLeft = scrollLeft; // Set textContent, if children is an animatable value\n\n    if (children !== void 0) instance.textContent = children; // Set styles ...\n\n    for (let styleName in style) {\n      if (!style.hasOwnProperty(styleName)) continue;\n      var isCustomProperty = styleName.indexOf('--') === 0;\n      var styleValue = dangerousStyleValue(styleName, style[styleName], isCustomProperty);\n      if (styleName === 'float') styleName = 'cssFloat';\n      if (isCustomProperty) instance.style.setProperty(styleName, styleValue);else instance.style[styleName] = styleValue;\n    } // Set attributes ...\n\n\n    for (let name in attributes) {\n      // Attributes are written in dash case\n      const dashCase = attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => '-' + n.toLowerCase()));\n      if (typeof instance.getAttribute(dashCase) !== 'undefined') instance.setAttribute(dashCase, attributes[name]);\n    }\n  } else return false;\n}, style => style);\n\nlet active = false;\nconst controllers = new Set();\n\nconst frameLoop = () => {\n  let time = now();\n\n  for (let controller of controllers) {\n    let isDone = true;\n    let noChange = true;\n\n    for (let configIdx = 0; configIdx < controller.configs.length; configIdx++) {\n      let config = controller.configs[configIdx];\n      let endOfAnimation, lastTime;\n\n      for (let valIdx = 0; valIdx < config.animatedValues.length; valIdx++) {\n        let animation = config.animatedValues[valIdx]; // If an animation is done, skip, until all of them conclude\n\n        if (animation.done) continue;\n        let from = config.fromValues[valIdx];\n        let to = config.toValues[valIdx];\n        let position = animation.lastPosition;\n        let isAnimated = to instanceof Animated;\n        let velocity = Array.isArray(config.initialVelocity) ? config.initialVelocity[valIdx] : config.initialVelocity;\n        if (isAnimated) to = to.getValue(); // Conclude animation if it's either immediate, or from-values match end-state\n\n        if (config.immediate || !isAnimated && !config.decay && from === to) {\n          animation.updateValue(to);\n          animation.done = true;\n          continue;\n        } // Doing delay here instead of setTimeout is one async worry less\n\n\n        if (config.delay && time - controller.startTime < config.delay) {\n          isDone = false;\n          continue;\n        } // Flag change\n\n\n        noChange = false; // Break animation when string values are involved\n\n        if (typeof from === 'string' || typeof to === 'string') {\n          animation.updateValue(to);\n          animation.done = true;\n          continue;\n        }\n\n        if (config.duration !== void 0) {\n          /** Duration easing */\n          position = from + config.easing((time - controller.startTime - config.delay) / config.duration) * (to - from);\n          endOfAnimation = time >= controller.startTime + config.delay + config.duration;\n        } else if (config.decay) {\n          /** Decay easing */\n          position = from + velocity / (1 - 0.998) * (1 - Math.exp(-(1 - 0.998) * (time - controller.startTime)));\n          endOfAnimation = Math.abs(animation.lastPosition - position) < 0.1;\n          if (endOfAnimation) to = position;\n        } else {\n          /** Spring easing */\n          lastTime = animation.lastTime !== void 0 ? animation.lastTime : time;\n          velocity = animation.lastVelocity !== void 0 ? animation.lastVelocity : config.initialVelocity; // If we lost a lot of frames just jump to the end.\n\n          if (time > lastTime + 64) lastTime = time; // http://gafferongames.com/game-physics/fix-your-timestep/\n\n          let numSteps = Math.floor(time - lastTime);\n\n          for (let i = 0; i < numSteps; ++i) {\n            let force = -config.tension * (position - to);\n            let damping = -config.friction * velocity;\n            let acceleration = (force + damping) / config.mass;\n            velocity = velocity + acceleration * 1 / 1000;\n            position = position + velocity * 1 / 1000;\n          } // Conditions for stopping the spring animation\n\n\n          let isOvershooting = config.clamp && config.tension !== 0 ? from < to ? position > to : position < to : false;\n          let isVelocity = Math.abs(velocity) <= config.precision;\n          let isDisplacement = config.tension !== 0 ? Math.abs(to - position) <= config.precision : true;\n          endOfAnimation = isOvershooting || isVelocity && isDisplacement;\n          animation.lastVelocity = velocity;\n          animation.lastTime = time;\n        } // Trails aren't done until their parents conclude\n\n\n        if (isAnimated && !config.toValues[valIdx].done) endOfAnimation = false;\n\n        if (endOfAnimation) {\n          // Ensure that we end up with a round value\n          if (animation.value !== to) position = to;\n          animation.done = true;\n        } else isDone = false;\n\n        animation.updateValue(position);\n        animation.lastPosition = position;\n      } // Keep track of updated values only when necessary\n\n\n      if (controller.props.onFrame || !controller.props.native) controller.animatedProps[config.name] = config.interpolation.getValue();\n    } // Update callbacks in the end of the frame\n\n\n    if (controller.props.onFrame || !controller.props.native) {\n      if (!controller.props.native && controller.onUpdate) controller.onUpdate();\n      if (controller.props.onFrame) controller.props.onFrame(controller.animatedProps);\n    } // Either call onEnd or next frame\n\n\n    if (isDone) {\n      controllers.delete(controller);\n      controller.debouncedOnEnd({\n        finished: true,\n        noChange\n      });\n    }\n  } // Loop over as long as there are controllers ...\n\n\n  if (controllers.size) requestFrame(frameLoop);else active = false;\n};\n\nconst addController = controller => {\n  if (!controllers.has(controller)) {\n    controllers.add(controller);\n    if (!active) requestFrame(frameLoop);\n    active = true;\n  }\n};\n\nconst removeController = controller => {\n  if (controllers.has(controller)) {\n    controllers.delete(controller);\n  }\n};\n\nclass Controller {\n  constructor(props, config) {\n    if (config === void 0) {\n      config = {\n        native: true,\n        interpolateTo: true,\n        autoStart: true\n      };\n    }\n\n    this.getValues = () => this.props.native ? this.interpolations : this.animatedProps;\n\n    this.dependents = new Set();\n    this.isActive = false;\n    this.hasChanged = false;\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.animatedProps = {};\n    this.configs = [];\n    this.frame = undefined;\n    this.startTime = undefined;\n    this.lastTime = undefined;\n    this.update(_extends({}, props, config));\n  }\n\n  update(props) {\n    this.props = _extends({}, this.props, props);\n\n    let _ref = this.props.interpolateTo ? interpolateTo(this.props) : this.props,\n        _ref$from = _ref.from,\n        from = _ref$from === void 0 ? {} : _ref$from,\n        _ref$to = _ref.to,\n        to = _ref$to === void 0 ? {} : _ref$to,\n        _ref$config = _ref.config,\n        config = _ref$config === void 0 ? {} : _ref$config,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === void 0 ? 0 : _ref$delay,\n        reverse = _ref.reverse,\n        attach = _ref.attach,\n        reset = _ref.reset,\n        immediate = _ref.immediate,\n        autoStart = _ref.autoStart,\n        ref = _ref.ref; // Reverse values when requested\n\n\n    if (reverse) {\n      var _ref2 = [to, from];\n      from = _ref2[0];\n      to = _ref2[1];\n    }\n\n    this.hasChanged = false; // Attachment handling, trailed springs can \"attach\" themselves to a previous spring\n\n    let target = attach && attach(this); // Reset merged props when necessary\n\n    let extra = reset ? {} : this.merged; // This will collect all props that were ever set\n\n    this.merged = _extends({}, from, extra, to); // Reduces input { name: value } pairs into animated values\n\n    this.animations = Object.entries(this.merged).reduce((acc, _ref3, i) => {\n      let name = _ref3[0],\n          value = _ref3[1];\n      // Issue cached entries, except on reset\n      let entry = !reset && acc[name] || {}; // Figure out what the value is supposed to be\n\n      const isNumber = typeof value === 'number';\n      const isString = typeof value === 'string' && !value.startsWith('#') && !/\\d/.test(value) && !colorNames[value];\n      const isArray = !isNumber && !isString && Array.isArray(value);\n      let fromValue = from[name] !== undefined ? from[name] : value;\n      let toValue = isNumber || isArray ? value : isString ? value : 1;\n      let toConfig = callProp(config, name);\n      if (target) toValue = target.animations[name].parent; // Detect changes, animated values will be checked in the raf-loop\n\n      if (toConfig.decay !== void 0 || !shallowEqual(entry.changes, value)) {\n        this.hasChanged = true;\n        let parent, interpolation$$1;\n        if (isNumber || isString) parent = interpolation$$1 = entry.parent || new AnimatedValue(fromValue);else if (isArray) parent = interpolation$$1 = entry.parent || new AnimatedArray(fromValue);else {\n          const prev = entry.interpolation && entry.interpolation.calc(entry.parent.value);\n\n          if (entry.parent) {\n            parent = entry.parent;\n            parent.setValue(0, false);\n          } else parent = new AnimatedValue(0);\n\n          const range = {\n            output: [prev !== void 0 ? prev : fromValue, value]\n          };\n\n          if (entry.interpolation) {\n            interpolation$$1 = entry.interpolation;\n            entry.interpolation.updateConfig(range);\n          } else interpolation$$1 = parent.interpolate(range);\n        } // Set immediate values\n\n        if (callProp(immediate, name)) parent.setValue(value, false); // Reset animated values\n\n        const animatedValues = toArray(parent.getPayload());\n        animatedValues.forEach(value => value.prepare(this));\n        return _extends({}, acc, {\n          [name]: _extends({}, entry, {\n            name,\n            parent,\n            interpolation: interpolation$$1,\n            animatedValues,\n            changes: value,\n            fromValues: toArray(parent.getValue()),\n            toValues: toArray(target ? toValue.getPayload() : toValue),\n            immediate: callProp(immediate, name),\n            delay: withDefault(toConfig.delay, delay || 0),\n            initialVelocity: withDefault(toConfig.velocity, 0),\n            clamp: withDefault(toConfig.clamp, false),\n            precision: withDefault(toConfig.precision, 0.01),\n            tension: withDefault(toConfig.tension, 170),\n            friction: withDefault(toConfig.friction, 26),\n            mass: withDefault(toConfig.mass, 1),\n            duration: toConfig.duration,\n            easing: withDefault(toConfig.easing, t => t),\n            decay: toConfig.decay\n          })\n        });\n      } else return acc;\n    }, this.animations);\n\n    if (this.hasChanged) {\n      this.configs = getValues$1(this.animations);\n      this.animatedProps = {};\n      this.interpolations = {};\n\n      for (let key in this.animations) {\n        this.interpolations[key] = this.animations[key].interpolation;\n        this.animatedProps[key] = this.animations[key].interpolation.getValue();\n      }\n    } // TODO: clean up ref in controller\n\n\n    for (var _len = arguments.length, start = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      start[_key - 1] = arguments[_key];\n    }\n\n    if (!ref && (autoStart || start.length)) this.start(...start);\n    const onEnd = start[0],\n          onUpdate = start[1];\n    this.onEnd = typeof onEnd === 'function' && onEnd;\n    this.onUpdate = onUpdate;\n    return this.getValues();\n  }\n\n  start(onEnd, onUpdate) {\n    this.startTime = now();\n    if (this.isActive) this.stop();\n    this.isActive = true;\n    this.onEnd = typeof onEnd === 'function' && onEnd;\n    this.onUpdate = onUpdate;\n    if (this.props.onStart) this.props.onStart();\n    addController(this);\n    return new Promise(res => this.resolve = res);\n  }\n\n  stop(finished) {\n    if (finished === void 0) {\n      finished = false;\n    }\n\n    // Reset collected changes since the animation has been stopped cold turkey\n    if (finished) getValues$1(this.animations).forEach(a => a.changes = undefined);\n    this.debouncedOnEnd({\n      finished\n    });\n  }\n\n  destroy() {\n    removeController(this);\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.animatedProps = {};\n    this.configs = [];\n  }\n\n  debouncedOnEnd(result) {\n    removeController(this);\n    this.isActive = false;\n    const onEnd = this.onEnd;\n    this.onEnd = null;\n    if (onEnd) onEnd(result);\n    if (this.resolve) this.resolve();\n    this.resolve = null;\n  }\n\n}\n\nclass AnimatedProps extends AnimatedObjectWithChildren {\n  constructor(props, callback) {\n    super();\n    if (props.style) props = _extends({}, props, {\n      style: createAnimatedStyle(props.style)\n    });\n    this.payload = props;\n    this.update = callback;\n    this.attach();\n  }\n\n}\n\nfunction createAnimatedComponent(Component) {\n  class AnimatedComponent extends React.Component {\n    constructor(props) {\n      super();\n\n      this.callback = () => {\n        if (this.node) {\n          const didUpdate = applyAnimatedValues.fn(this.node, this.propsAnimated.getAnimatedValue(), this);\n          if (didUpdate === false) this.forceUpdate();\n        }\n      };\n\n      this.attachProps(props);\n    }\n\n    componentWillUnmount() {\n      this.propsAnimated && this.propsAnimated.detach();\n    }\n\n    setNativeProps(props) {\n      const didUpdate = applyAnimatedValues.fn(this.node, props, this);\n      if (didUpdate === false) this.forceUpdate();\n    } // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that\n    // changed. However, setNativeProps can only be implemented on leaf\n    // native components. If you want to animate a composite component, you\n    // need to re-render it. In this case, we have a fallback that uses\n    // forceUpdate.\n\n\n    attachProps(_ref) {\n      let forwardRef = _ref.forwardRef,\n          nextProps = _objectWithoutPropertiesLoose(_ref, [\"forwardRef\"]);\n\n      const oldPropsAnimated = this.propsAnimated;\n      this.propsAnimated = new AnimatedProps(nextProps, this.callback); // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n\n      oldPropsAnimated && oldPropsAnimated.detach();\n    }\n\n    shouldComponentUpdate(props) {\n      const style = props.style,\n            nextProps = _objectWithoutPropertiesLoose(props, [\"style\"]);\n\n      const _this$props = this.props,\n            currentStyle = _this$props.style,\n            currentProps = _objectWithoutPropertiesLoose(_this$props, [\"style\"]);\n\n      if (!shallowEqual(currentProps, nextProps) || !shallowEqual(currentStyle, style)) {\n        this.attachProps(props);\n        return true;\n      }\n\n      return false;\n    }\n\n    render() {\n      const _this$propsAnimated$g = this.propsAnimated.getValue(),\n            scrollTop = _this$propsAnimated$g.scrollTop,\n            scrollLeft = _this$propsAnimated$g.scrollLeft,\n            animatedProps = _objectWithoutPropertiesLoose(_this$propsAnimated$g, [\"scrollTop\", \"scrollLeft\"]);\n\n      return React.createElement(Component, _extends({}, animatedProps, {\n        ref: node => this.node = handleRef(node, this.props.forwardRef)\n      }));\n    }\n\n  }\n\n  return React.forwardRef((props, ref) => React.createElement(AnimatedComponent, _extends({}, props, {\n    forwardRef: ref\n  })));\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nclass Spring extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      lastProps: {\n        from: {},\n        to: {}\n      },\n      propsChanged: false,\n      internal: false\n    };\n    this.controller = new Controller(null, null);\n    this.didUpdate = false;\n    this.didInject = false;\n    this.finished = true;\n\n    this.start = () => {\n      this.finished = false;\n      let wasMounted = this.mounted;\n      this.controller.start(props => this.finish(_extends({}, props, {\n        wasMounted\n      })), this.update);\n    };\n\n    this.stop = () => this.controller.stop(true);\n\n    this.update = () => this.mounted && this.setState({\n      internal: true\n    });\n\n    this.finish = (_ref) => {\n      let finished = _ref.finished,\n          noChange = _ref.noChange,\n          wasMounted = _ref.wasMounted;\n      this.finished = true;\n\n      if (this.mounted && finished) {\n        // Only call onRest if either we *were* mounted, or when there were changes\n        if (this.props.onRest && (wasMounted || !noChange)) this.props.onRest(this.controller.merged); // Restore end-state\n\n        if (this.mounted && this.didInject) {\n          this.afterInject = convertValues(this.props);\n          this.setState({\n            internal: true\n          });\n        } // If we have an inject or values to apply after the animation we ping here\n\n\n        if (this.mounted && (this.didInject || this.props.after)) this.setState({\n          internal: true\n        });\n        this.didInject = false;\n      }\n    };\n  }\n\n  componentDidMount() {\n    // componentDidUpdate isn't called on mount, we call it here to start animating\n    this.componentDidUpdate();\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    // Stop all ongoing animtions\n    this.mounted = false;\n    this.stop();\n  }\n\n  static getDerivedStateFromProps(props, _ref2) {\n    let internal = _ref2.internal,\n        lastProps = _ref2.lastProps;\n    // The following is a test against props that could alter the animation\n    const from = props.from,\n          to = props.to,\n          reset = props.reset,\n          force = props.force;\n    const propsChanged = !shallowEqual(to, lastProps.to) || !shallowEqual(from, lastProps.from) || reset && !internal || force && !internal;\n    return {\n      propsChanged,\n      lastProps: props,\n      internal: false\n    };\n  }\n\n  render() {\n    const children = this.props.children;\n    const propsChanged = this.state.propsChanged; // Inject phase -----------------------------------------------------------\n    // Handle injected frames, for instance targets/web/fix-auto\n    // An inject will return an intermediary React node which measures itself out\n    // .. and returns a callback when the values sought after are ready, usually \"auto\".\n\n    if (this.props.inject && propsChanged && !this.injectProps) {\n      const frame = this.props.inject(this.props, injectProps => {\n        // The inject frame has rendered, now let's update animations...\n        this.injectProps = injectProps;\n        this.setState({\n          internal: true\n        });\n      }); // Render out injected frame\n\n      if (frame) return frame;\n    } // Update phase -----------------------------------------------------------\n\n\n    if (this.injectProps || propsChanged) {\n      // We can potentially cause setState, but we're inside render, the flag prevents that\n      this.didInject = false; // Update animations, this turns from/to props into AnimatedValues\n      // An update can occur on injected props, or when own-props have changed.\n\n      if (this.injectProps) {\n        this.controller.update(this.injectProps); // didInject is needed, because there will be a 3rd stage, where the original values\n        // .. will be restored after the animation is finished. When someone animates towards\n        // .. \"auto\", the end-result should be \"auto\", not \"1999px\", which would block nested\n        // .. height/width changes.\n\n        this.didInject = true;\n      } else if (propsChanged) this.controller.update(this.props); // Flag an update that occured, componentDidUpdate will start the animation later on\n\n\n      this.didUpdate = true;\n      this.afterInject = undefined;\n      this.injectProps = undefined;\n    } // Render phase -----------------------------------------------------------\n    // Render out raw values or AnimatedValues depending on \"native\"\n\n\n    let values = _extends({}, this.controller.getValues(), this.afterInject);\n\n    if (this.finished) values = _extends({}, values, this.props.after);\n    return Object.keys(values).length ? children(values) : null;\n  }\n\n  componentDidUpdate() {\n    // The animation has to start *after* render, since at that point the scene\n    // .. graph should be established, so we do it here. Unfortunatelly, non-native\n    // .. animations as well as \"auto\"-injects call forceUpdate, so it's causing a loop.\n    // .. didUpdate prevents that as it gets set only on prop changes.\n    if (this.didUpdate) this.start();\n    this.didUpdate = false;\n  }\n\n}\nSpring.defaultProps = {\n  from: {},\n  to: {},\n  config: config.default,\n  native: false,\n  immediate: false,\n  reset: false,\n  force: false,\n  inject: bugfixes\n};\n\nclass Trail extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.first = true;\n    this.instances = new Set();\n\n    this.hook = (instance, index, length, reverse) => {\n      // Add instance to set\n      this.instances.add(instance); // Return undefined on the first index and from then on the previous instance\n\n      if (reverse ? index === length - 1 : index === 0) return undefined;else return Array.from(this.instances)[reverse ? index + 1 : index - 1];\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          items = _this$props.items,\n          _children = _this$props.children,\n          _this$props$from = _this$props.from,\n          from = _this$props$from === void 0 ? {} : _this$props$from,\n          initial = _this$props.initial,\n          reverse = _this$props.reverse,\n          keys = _this$props.keys,\n          delay = _this$props.delay,\n          onRest = _this$props.onRest,\n          props = _objectWithoutPropertiesLoose(_this$props, [\"items\", \"children\", \"from\", \"initial\", \"reverse\", \"keys\", \"delay\", \"onRest\"]);\n\n    const array = toArray(items);\n    return toArray(array).map((item, i) => React.createElement(Spring, _extends({\n      onRest: i === 0 ? onRest : null,\n      key: typeof keys === 'function' ? keys(item) : toArray(keys)[i],\n      from: this.first && initial !== void 0 ? initial || {} : from\n    }, props, {\n      delay: i === 0 && delay || undefined,\n      attach: instance => this.hook(instance, i, array.length, reverse),\n      children: props => {\n        const child = _children(item, i);\n\n        return child ? child(props) : null;\n      }\n    })));\n  }\n\n  componentDidUpdate(prevProps) {\n    this.first = false;\n    if (prevProps.items !== this.props.items) this.instances.clear();\n  }\n\n}\nTrail.defaultProps = {\n  keys: item => item\n};\n\nconst DEFAULT = '__default';\n\nclass KeyframesImpl extends React.PureComponent {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.guid = 0;\n    this.state = {\n      props: {},\n      resolve: () => null,\n      last: true,\n      index: 0\n    };\n\n    this.next = function (props, last, index) {\n      if (last === void 0) {\n        last = true;\n      }\n\n      if (index === void 0) {\n        index = 0;\n      }\n\n      _this.running = true;\n      return new Promise(resolve => {\n        _this.mounted && _this.setState(state => ({\n          props,\n          resolve,\n          last,\n          index\n        }), () => _this.running = false);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.componentDidUpdate({});\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  componentDidUpdate(previous) {\n    var _this2 = this;\n\n    const _this$props = this.props,\n          states = _this$props.states,\n          f = _this$props.filter,\n          state = _this$props.state;\n\n    if (previous.state !== this.props.state || this.props.reset && !this.running || !shallowEqual(states[state], previous.states[previous.state])) {\n      if (states && state && states[state]) {\n        const localId = ++this.guid;\n        const slots = states[state];\n\n        if (slots) {\n          if (Array.isArray(slots)) {\n            let q = Promise.resolve();\n\n            for (let i = 0; i < slots.length; i++) {\n              let index = i;\n              let slot = slots[index];\n              let last = index === slots.length - 1;\n              q = q.then(() => localId === this.guid && this.next(f(slot), last, index));\n            }\n          } else if (typeof slots === 'function') {\n            let index = 0;\n            slots( // next\n            function (props, last) {\n              if (last === void 0) {\n                last = false;\n              }\n\n              return localId === _this2.guid && _this2.next(f(props), last, index++);\n            }, // cancel\n            () => requestFrame(() => this.instance && this.instance.stop()), // ownprops\n            this.props);\n          } else {\n            this.next(f(states[state]));\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          props = _this$state.props,\n          resolve = _this$state.resolve,\n          last = _this$state.last,\n          index = _this$state.index;\n    if (!props || Object.keys(props).length === 0) return null;\n\n    let _this$props2 = this.props,\n        state = _this$props2.state,\n        filter = _this$props2.filter,\n        states = _this$props2.states,\n        config = _this$props2.config,\n        Component = _this$props2.primitive,\n        _onRest = _this$props2.onRest,\n        forwardRef = _this$props2.forwardRef,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"state\", \"filter\", \"states\", \"config\", \"primitive\", \"onRest\", \"forwardRef\"]); // Arrayed configs need an index to process\n\n\n    if (Array.isArray(config)) config = config[index];\n    return React.createElement(Component, _extends({\n      ref: _ref => this.instance = handleRef(_ref, forwardRef),\n      config: config\n    }, rest, props, {\n      onRest: args => {\n        resolve(args);\n        if (_onRest && last) _onRest(args);\n      }\n    }));\n  }\n\n}\n\nKeyframesImpl.defaultProps = {\n  state: DEFAULT\n};\nconst Keyframes = React.forwardRef((props, ref) => React.createElement(KeyframesImpl, _extends({}, props, {\n  forwardRef: ref\n})));\n\nKeyframes.create = primitive => function (states, filter) {\n  if (filter === void 0) {\n    filter = states => states;\n  }\n\n  if (typeof states === 'function' || Array.isArray(states)) states = {\n    [DEFAULT]: states\n  };\n  return props => React.createElement(KeyframesImpl, _extends({\n    primitive: primitive,\n    states: states,\n    filter: filter\n  }, props));\n};\n\nKeyframes.Spring = states => Keyframes.create(Spring)(states, interpolateTo);\n\nKeyframes.Trail = states => Keyframes.create(Trail)(states, interpolateTo);\n\nlet guid = 0;\n\nlet get = props => {\n  let items = props.items,\n      keys = props.keys,\n      rest = _objectWithoutPropertiesLoose(props, [\"items\", \"keys\"]);\n\n  items = toArray(items !== void 0 ? items : null);\n  keys = typeof keys === 'function' ? items.map(keys) : toArray(keys); // Make sure numeric keys are interpreted as Strings (5 !== \"5\")\n\n  return _extends({\n    items,\n    keys: keys.map(key => String(key))\n  }, rest);\n};\n\nclass Transition extends React.PureComponent {\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  constructor(prevProps) {\n    super(prevProps);\n\n    this.destroyItem = (item, key, state) => values => {\n      const _this$props = this.props,\n            onRest = _this$props.onRest,\n            onDestroyed = _this$props.onDestroyed;\n\n      if (this.mounted) {\n        onDestroyed && onDestroyed(item);\n        this.setState((_ref) => {\n          let deleted = _ref.deleted;\n          return {\n            deleted: deleted.filter(t => t.key !== key)\n          };\n        });\n        onRest && onRest(item, state, values);\n      }\n    };\n\n    this.state = {\n      first: true,\n      transitions: [],\n      current: {},\n      deleted: [],\n      prevProps\n    };\n  }\n\n  static getDerivedStateFromProps(props, _ref2) {\n    let first = _ref2.first,\n        prevProps = _ref2.prevProps,\n        state = _objectWithoutPropertiesLoose(_ref2, [\"first\", \"prevProps\"]);\n\n    let _get = get(props),\n        items = _get.items,\n        keys = _get.keys,\n        initial = _get.initial,\n        from = _get.from,\n        enter = _get.enter,\n        leave = _get.leave,\n        update = _get.update,\n        _get$trail = _get.trail,\n        trail = _get$trail === void 0 ? 0 : _get$trail,\n        unique = _get.unique,\n        config = _get.config;\n\n    let _get2 = get(prevProps),\n        _keys = _get2.keys,\n        _items = _get2.items;\n\n    let current = _extends({}, state.current);\n\n    let deleted = [...state.deleted]; // Compare next keys with current keys\n\n    let currentKeys = Object.keys(current);\n    let currentSet = new Set(currentKeys);\n    let nextSet = new Set(keys);\n    let added = keys.filter(item => !currentSet.has(item));\n    let removed = state.transitions.filter(item => !item.destroyed && !nextSet.has(item.originalKey)).map(i => i.originalKey);\n    let updated = keys.filter(item => currentSet.has(item));\n    let delay = 0;\n    added.forEach(key => {\n      // In unique mode, remove fading out transitions if their key comes in again\n      if (unique && deleted.find(d => d.originalKey === key)) deleted = deleted.filter(t => t.originalKey !== key);\n      const keyIndex = keys.indexOf(key);\n      const item = items[keyIndex];\n      const state = 'enter';\n      current[key] = {\n        state,\n        originalKey: key,\n        key: unique ? String(key) : guid++,\n        item,\n        trail: delay = delay + trail,\n        config: callProp(config, item, state),\n        from: callProp(first ? initial !== void 0 ? initial || {} : from : from, item),\n        to: callProp(enter, item)\n      };\n    });\n    removed.forEach(key => {\n      const keyIndex = _keys.indexOf(key);\n\n      const item = _items[keyIndex];\n      const state = 'leave';\n      deleted.push(_extends({}, current[key], {\n        state,\n        destroyed: true,\n        left: _keys[Math.max(0, keyIndex - 1)],\n        right: _keys[Math.min(_keys.length, keyIndex + 1)],\n        trail: delay = delay + trail,\n        config: callProp(config, item, state),\n        to: callProp(leave, item)\n      }));\n      delete current[key];\n    });\n    updated.forEach(key => {\n      const keyIndex = keys.indexOf(key);\n      const item = items[keyIndex];\n      const state = 'update';\n      current[key] = _extends({}, current[key], {\n        item,\n        state,\n        trail: delay = delay + trail,\n        config: callProp(config, item, state),\n        to: callProp(update, item)\n      });\n    }); // This tries to restore order for deleted items by finding their last known siblings\n\n    let out = keys.map(key => current[key]);\n    deleted.forEach((_ref3) => {\n      let left = _ref3.left,\n          right = _ref3.right,\n          transition = _objectWithoutPropertiesLoose(_ref3, [\"left\", \"right\"]);\n\n      let pos; // Was it the element on the left, if yes, move there ...\n\n      if ((pos = out.findIndex(t => t.originalKey === left)) !== -1) pos += 1; // Or how about the element on the right ...\n\n      if (pos === -1) pos = out.findIndex(t => t.originalKey === right); // Maybe we'll find it in the list of deleted items\n\n      if (pos === -1) pos = deleted.findIndex(t => t.originalKey === left); // Checking right side as well\n\n      if (pos === -1) pos = deleted.findIndex(t => t.originalKey === right); // And if nothing else helps, move it to the start ¯\\_(ツ)_/¯\n\n      pos = Math.max(0, pos);\n      out = [...out.slice(0, pos), transition, ...out.slice(pos)];\n    });\n    return {\n      first: first && added.length === 0,\n      transitions: out,\n      current,\n      deleted,\n      prevProps: props\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          initial = _this$props2.initial,\n          _this$props2$from = _this$props2.from,\n          _this$props2$enter = _this$props2.enter,\n          _this$props2$leave = _this$props2.leave,\n          _this$props2$update = _this$props2.update,\n          onDestroyed = _this$props2.onDestroyed,\n          keys = _this$props2.keys,\n          items = _this$props2.items,\n          onFrame = _this$props2.onFrame,\n          onRest = _this$props2.onRest,\n          onStart = _this$props2.onStart,\n          trail = _this$props2.trail,\n          config = _this$props2.config,\n          _children = _this$props2.children,\n          unique = _this$props2.unique,\n          reset = _this$props2.reset,\n          extra = _objectWithoutPropertiesLoose(_this$props2, [\"initial\", \"from\", \"enter\", \"leave\", \"update\", \"onDestroyed\", \"keys\", \"items\", \"onFrame\", \"onRest\", \"onStart\", \"trail\", \"config\", \"children\", \"unique\", \"reset\"]);\n\n    return this.state.transitions.map((_ref4, i) => {\n      let state = _ref4.state,\n          key = _ref4.key,\n          item = _ref4.item,\n          from = _ref4.from,\n          to = _ref4.to,\n          trail = _ref4.trail,\n          config = _ref4.config,\n          destroyed = _ref4.destroyed;\n      return React.createElement(Keyframes, _extends({\n        reset: reset && state === 'enter',\n        primitive: Spring,\n        state: state,\n        filter: interpolateTo,\n        states: {\n          [state]: to\n        },\n        key: key,\n        onRest: destroyed ? this.destroyItem(item, key, state) : onRest && (values => onRest(item, state, values)),\n        onStart: onStart && (() => onStart(item, state)),\n        onFrame: onFrame && (values => onFrame(item, state, values)),\n        delay: trail,\n        config: config\n      }, extra, {\n        from: from,\n        children: props => {\n          const child = _children(item, state, i);\n\n          return child ? child(props) : null;\n        }\n      }));\n    });\n  }\n\n}\nTransition.defaultProps = {\n  keys: item => item,\n  unique: false,\n  reset: false\n};\n\nconst domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nconst extendedAnimated = domElements.reduce((acc, element) => {\n  acc[element] = createAnimatedComponent(element);\n  return acc;\n}, createAnimatedComponent);\n\nexport { Spring, Keyframes, Transition, Trail, Controller, config, extendedAnimated as animated, interpolate$1 as interpolate, Globals };\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EmitterSubscription\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventSubscription = require('./EventSubscription');\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\n\nvar EmitterSubscription = (function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  function EmitterSubscription(subscriber, listener, context) {\n    _classCallCheck(this, EmitterSubscription);\n\n    _EventSubscription.call(this, subscriber);\n    this.listener = listener;\n    this.context = context;\n  }\n\n  return EmitterSubscription;\n})(EventSubscription);\n\nmodule.exports = EmitterSubscription;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar fbemitter = {\n  EventEmitter: require('./lib/BaseEventEmitter'),\n  EmitterSubscription : require('./lib/EmitterSubscription')\n};\n\nmodule.exports = fbemitter;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BaseEventEmitter\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EmitterSubscription = require('./EmitterSubscription');\nvar EventSubscriptionVendor = require('./EventSubscriptionVendor');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @class BaseEventEmitter\n * @description\n * An EventEmitter is responsible for managing a set of listeners and publishing\n * events to them when it is told that such events happened. In addition to the\n * data for the given event it also sends a event control object which allows\n * the listeners/handlers to prevent the default behavior of the given event.\n *\n * The emitter is designed to be generic enough to support all the different\n * contexts in which one might want to emit events. It is a simple multicast\n * mechanism on top of which extra functionality can be composed. For example, a\n * more advanced emitter may use an EventHolder and EventFactory.\n */\n\nvar BaseEventEmitter = (function () {\n  /**\n   * @constructor\n   */\n\n  function BaseEventEmitter() {\n    _classCallCheck(this, BaseEventEmitter);\n\n    this._subscriber = new EventSubscriptionVendor();\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a listener to be invoked when events of the specified type are\n   * emitted. An optional calling context may be provided. The data arguments\n   * emitted will be passed to the listener function.\n   *\n   * TODO: Annotate the listener arg's type. This is tricky because listeners\n   *       can be invoked with varargs.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    return this._subscriber.addSubscription(eventType, new EmitterSubscription(this._subscriber, listener, context));\n  };\n\n  /**\n   * Similar to addListener, except that the listener is removed after it is\n   * invoked once.\n   *\n   * @param {string} eventType - Name of the event to listen to\n   * @param {function} listener - Function to invoke only once when the\n   *   specified event is emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n\n  BaseEventEmitter.prototype.once = function once(eventType, listener, context) {\n    var emitter = this;\n    return this.addListener(eventType, function () {\n      emitter.removeCurrentListener();\n      listener.apply(context, arguments);\n    });\n  };\n\n  /**\n   * Removes all of the registered listeners, including those registered as\n   * listener maps.\n   *\n   * @param {?string} eventType - Optional name of the event whose registered\n   *   listeners to remove\n   */\n\n  BaseEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    this._subscriber.removeAllSubscriptions(eventType);\n  };\n\n  /**\n   * Provides an API that can be called during an eventing cycle to remove the\n   * last listener that was invoked. This allows a developer to provide an event\n   * object that can remove the listener (or listener map) during the\n   * invocation.\n   *\n   * If it is called when not inside of an emitting cycle it will throw.\n   *\n   * @throws {Error} When called not during an eventing cycle\n   *\n   * @example\n   *   var subscription = emitter.addListenerMap({\n   *     someEvent: function(data, event) {\n   *       console.log(data);\n   *       emitter.removeCurrentListener();\n   *     }\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   *   emitter.emit('someEvent', 'def'); // does not log anything\n   */\n\n  BaseEventEmitter.prototype.removeCurrentListener = function removeCurrentListener() {\n    !!!this._currentSubscription ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Not in an emitting cycle; there is no current subscription') : invariant(false) : undefined;\n    this._subscriber.removeSubscription(this._currentSubscription);\n  };\n\n  /**\n   * Returns an array of listeners that are currently registered for the given\n   * event.\n   *\n   * @param {string} eventType - Name of the event to query\n   * @return {array}\n   */\n\n  BaseEventEmitter.prototype.listeners = function listeners(eventType) /* TODO: Array<EventSubscription> */{\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n      return subscription.listener;\n    }) : [];\n  };\n\n  /**\n   * Emits an event of the given type with the given data. All handlers of that\n   * particular type will be notified.\n   *\n   * @param {string} eventType - Name of the event to emit\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   *\n   * @example\n   *   emitter.addListener('someEvent', function(message) {\n   *     console.log(message);\n   *   });\n   *\n   *   emitter.emit('someEvent', 'abc'); // logs 'abc'\n   */\n\n  BaseEventEmitter.prototype.emit = function emit(eventType) {\n    var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n    if (subscriptions) {\n      var keys = Object.keys(subscriptions);\n      for (var ii = 0; ii < keys.length; ii++) {\n        var key = keys[ii];\n        var subscription = subscriptions[key];\n        // The subscription may have been removed during this event loop.\n        if (subscription) {\n          this._currentSubscription = subscription;\n          this.__emitToSubscription.apply(this, [subscription].concat(Array.prototype.slice.call(arguments)));\n        }\n      }\n      this._currentSubscription = null;\n    }\n  };\n\n  /**\n   * Provides a hook to override how the emitter emits an event to a specific\n   * subscription. This allows you to set up logging and error boundaries\n   * specific to your environment.\n   *\n   * @param {EmitterSubscription} subscription\n   * @param {string} eventType\n   * @param {*} Arbitrary arguments to be passed to each registered listener\n   */\n\n  BaseEventEmitter.prototype.__emitToSubscription = function __emitToSubscription(subscription, eventType) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    subscription.listener.apply(subscription.context, args);\n  };\n\n  return BaseEventEmitter;\n})();\n\nmodule.exports = BaseEventEmitter;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventSubscription\n * @typechecks\n */\n\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar EventSubscription = (function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n  EventSubscription.prototype.remove = function remove() {\n    if (this.subscriber) {\n      this.subscriber.removeSubscription(this);\n      this.subscriber = null;\n    }\n  };\n\n  return EventSubscription;\n})();\n\nmodule.exports = EventSubscription;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n * \n * @providesModule EventSubscriptionVendor\n * @typechecks\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * EventSubscriptionVendor stores a set of EventSubscriptions that are\n * subscribed to a particular event type.\n */\n\nvar EventSubscriptionVendor = (function () {\n  function EventSubscriptionVendor() {\n    _classCallCheck(this, EventSubscriptionVendor);\n\n    this._subscriptionsForType = {};\n    this._currentSubscription = null;\n  }\n\n  /**\n   * Adds a subscription keyed by an event type.\n   *\n   * @param {string} eventType\n   * @param {EventSubscription} subscription\n   */\n\n  EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n    !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n    if (!this._subscriptionsForType[eventType]) {\n      this._subscriptionsForType[eventType] = [];\n    }\n    var key = this._subscriptionsForType[eventType].length;\n    this._subscriptionsForType[eventType].push(subscription);\n    subscription.eventType = eventType;\n    subscription.key = key;\n    return subscription;\n  };\n\n  /**\n   * Removes a bulk set of the subscriptions.\n   *\n   * @param {?string} eventType - Optional name of the event type whose\n   *   registered supscriptions to remove, if null remove all subscriptions.\n   */\n\n  EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n    if (eventType === undefined) {\n      this._subscriptionsForType = {};\n    } else {\n      delete this._subscriptionsForType[eventType];\n    }\n  };\n\n  /**\n   * Removes a specific subscription. Instead of calling this function, call\n   * `subscription.remove()` directly.\n   *\n   * @param {object} subscription\n   */\n\n  EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n    var eventType = subscription.eventType;\n    var key = subscription.key;\n\n    var subscriptionsForType = this._subscriptionsForType[eventType];\n    if (subscriptionsForType) {\n      delete subscriptionsForType[key];\n    }\n  };\n\n  /**\n   * Returns the array of subscriptions that are currently registered for the\n   * given event type.\n   *\n   * Note: This array can be potentially sparse as subscriptions are deleted\n   * from it when they are removed.\n   *\n   * TODO: This returns a nullable array. wat?\n   *\n   * @param {string} eventType\n   * @return {?array}\n   */\n\n  EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n    return this._subscriptionsForType[eventType];\n  };\n\n  return EventSubscriptionVendor;\n})();\n\nmodule.exports = EventSubscriptionVendor;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n"],"sourceRoot":""}